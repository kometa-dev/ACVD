{
	"actions": {
		"icp": {
			"parameters": [
				{
					"name": "sourceMesh",
					"type": "file",
					"required": "true"
				},
				{
					"name": "targetMesh",
					"type": "file",
					"required": "true"
				}
			],
			"executable": "bin/icp"
		},
		"meshDifference": {
			"parameters": [
				{
					"name": "meshes",
					"type": "file",
					"required": "true"
				}
			],
			"executable": "bin/meshDifference"
		},
		"clipMesh": {
			"parameters": [
				{
					"name": "inputMesh",
					"type": "file",
					"required": "true"
				},
				{
					"name": "ox",
					"type": "float",
					"required": true
				},
				{
					"name": "oy",
					"type": "float",
					"required": true
				},
				{
					"name": "oz",
					"type": "float",
					"required": true
				},
				{
					"name": "nx",
					"type": "float",
					"required": true
				},
				{
					"name": "ny",
					"type": "float",
					"required": true
				},
				{
					"name": "nz",
					"type": "float",
					"required": true
				},
				{
					"text" : "-d 0"
				}
			],
			"executable": "bin/clipMesh"
		},
		"VolumeOOCSlice": {
			"parameters": [
				{
					"name": "inputVolume",
					"type": "file",
					"required": "true"
				},
				{
					"name": "slice",
					"type": "int",
					"required": true
				}
			],
			"executable": "bin/VolumeOOCSlice"
		},
		"acvd": {
			"description": "Performs simplification/remeshing of 3D triangular meshes",
			"parameters": [
				{
					"name": "input_mesh",
					"type": "file",
					"required": "true"
				},
				{
					"name": "number_of_desired_vertices",
					"info": "number of desired vertices for the output mesh",
					"type": "int",
					"min": "0",
					"required": "true"
				},
				{
					"name": "gradation",
					"type": "float",
					"info": "set to 0 for uniform meshing, increase (example : 2.5) to add curvature-adapted meshing",
					"required": "true",
					"min": "0",
					"max": "30",
					"defaultValue": "0"
				},
				{
					"prefix": "-m ",
					"info": "force the output mesh to be manifold",
					"name": "force_manifold",
					"type": "int",
					"required": "false",
					"min": "0",
					"max": "1"
				},
				{
					"text": "-d 0"
				}
			],
			"executable": "bin/ACVD"
		},
		"acvdq": {
			"description": "Performs simplification/remeshing of 3D triangular meshes (usin QEM, more accurate but slower)",
			"parameters": [
				{
					"name": "input_mesh",
					"type": "file",
					"required": true
				},
				{
					"name": "number_of_desired_vertices",
					"info": "number of desired vertices for the output mesh",
					"type": "int",
					"min": "0",
					"required": true
				},
				{
					"name": "gradation",
					"info": "set to 0 for uniform meshing, increase (example : 2.5) to add curvature-adapted meshing",
					"type": "float",
					"required": true,
					"min": "0",
					"max": "30",
					"defaultValue": "0"
				},
				{
					"prefix": "-m ",
					"info": "force the output mesh to be manifold",
					"name": "force_manifold",
					"type": "int",
					"min": "0",
					"max": "1"
				},
				{
					"prefix": "-q ",
					"info": "quadrics level (0 : no quadrics, 3 : full quadrics)",
					"name": "quadricsLevel",
					"type": "int",
					"min": "0",
					"max": "3",
					"defaultValue": "3"
				},
				{
					"text": "-d 0"
				}
			],
			"executable": "bin/ACVDQ"
		},
		"extract_meshes": {
			"description": "Generates meshes from labeled volume data : marching cubes + simplification + smoothing",
			"parameters": [
				{
					"name": "input_volume",
					"type": "file",
					"required": true
				},
				{
					"name": "max_number_of_vertices",
					"type": "int",
					"min": "-1",
					"defaultValue": "10000",
					"prefix": "-n "
				},
				{
					"name": "simplification_method",
					"type": "int",
					"min": "0",
					"max": "1",
					"defaultValue": "0",
					"prefix": "-s "
				},
				{
					"name": "number_of_smoothing_steps",
					"type": "int",
					"min": "0",
					"defaultValue": "0",
					"prefix": "-sm "
				},
				{
					"name": "gradation",
					"type": "float",
					"min": "0",
					"max": "3",
					"defaultValue": "0",
					"prefix": "-g "
				},
				{
					"name": "format",
					"type": "string",
					"defaultValue": "vtk",
					"prefix": "-f "
				},
				{
					"name": "manifold_output",
					"type": "int",
					"min": "0",
					"max": "1",
					"prefix": "-fill 1 -m "
				},
				{
					"name": "anisotropy",
					"type": "int",
					"defaultValue": "0",
					"min": "0",
					"max": "1",
					"prefix": "-a "
				},
				{
					"name": "num_voxel_max",
					"info": "defines the maximum number of input voxels. If the input volume has more, it will be resampled to this number",
					"type": "int",
					"min": "0",
					"prefix": "-v "
				},
				{
					"name": "cleaning",
					"type": "int",
					"defaultValue": "0",
					"min": "0",
					"max": "1",
					"prefix": "-c "
				},
				{
					"name": "fill_holes",
					"type": "int",
					"defaultValue": "0",
					"min": "0",
					"max": "1",
					"prefix": "-fill "
				},
				{
					"name": "colors",
					"type": "file",
					"prefix": "-x "
				},
				{
					"name": "threshold",
					"type": "float",
					"prefix": "-t "
				},
				{
					"name": "masks",
					"type": "string",
					"prefix": "-masks "
				}
			],
			"executable": "bin/VolumeAnalysis"
		},
		"mesh2vtk": {
			"description": "Converts a mesh into a vtk format",
			"parameters": [
				{
					"name": "input_mesh",
					"type": "file",
					"required": "true"
				}
			],
			"executable": "bin/mesh2vtk"
		},
		"slice_volume": {
			"description": "Computes slices from volume data",
			"parameters": [
				{
					"name": "input_volume",
					"type": "file",
					"required": true
				},
				{
					"prefix": "-f ",
					"name": "format",
					"type": "int",
					"min": "0",
					"max": "1"
				},
				{
					"prefix": "-orientation ",
					"name": "slice_orientation",
					"type": "int",
					"required": true,
					"min": "0",
					"max": "2"
				},
				{
					"prefix": "-uc ",
					"name": "convert_to_uchar",
					"type": "int",
					"min": "0",
					"max": "1"
				},
				{
					"prefix": "-s ",
					"name": "sampling_ratio",
					"type": "float"
				}
			],
			"executable": "bin/VolumeSlice",
			"permissions": 0
		},
		"volume_median_filtering": {
			"description": "Computes median filtering for volume data",
			"parameters": [
				{
					"name": "input_volume",
					"type": "file",
					"required": "true"
				},
				{
					"name": "kernel_size",
					"type": "int",
					"required": "true",
					"defaultValue": "5",
					"min": "1",
					"max": "10"
				}
			],
			"executable": "bin/VolumeMedian"
		},
		"volume_anisotropic_diffusion": {
			"parameters": [
				{
					"name": "input_volume",
					"type": "file",
					"required": "true"
				},
				{
					"name": "number_of_iterations",
					"type": "int",
					"required": "true",
					"min": "1"
				},
				{
					"prefix": "-t ",
					"name": "diffusion_threshold",
					"type": "float"
				},
				{
					"prefix": "-f ",
					"name": "diffusion_factor",
					"type": "float"
				}
			],
			"executable": "bin/VolumeAnisotropicDiffusion"
		},
		"img2raw": {
			"parameters": [
				{
					"text": "-o output.mhd"
				},
				{
					"name": "input_directory",
					"type": "directory",
					"required": true
				}
			],
			"executable": "bin/img2raw",
			"noCache": true
		}
	}
}
